// Match the two file paths inside the Alloy container (shared volumes)
local.file_match "nginx_access" {
    path_targets = [{ "__path__" = "/var/log/nginx/access.jsonl" }]
}

local.file_match "app_logs" {
    path_targets = [{ "__path__" = "/var/log/app/app.jsonl" }]
}

// Tail NGINX file(s)
loki.source.file "nginx_access" {
    targets = local.file_match.nginx_access.targets
    forward_to = [loki.process.nginx.receiver]
}

// Tail app file(s)
loki.source.file "app_logs" {
    targets = local.file_match.app_logs.targets
    forward_to = [loki.process.app.receiver]
}

// Parse JSON lines and add low-cardinality labels
loki.process "nginx" {
    // Maps JSON fields you care about; "" means 'use the same field name from JSON'
    stage.json {
        expressions = {
            ts = "ts",
            status = "status",
            method = "method",
            path = "path",
            request_id = "request_id",
            host = "host",
            service = "service",
        }
    }

    // Optional: static labels kept low-cardinality
    stage.labels {
        values = {
            source = "nginx",
            service = "notes-nginx",
            compose_project = "fastapi-notes",
        }
    }

    forward_to = [loki.write.default.receiver]
}

loki.process "app" {
    stage.json {
        expressions = {
            ts = "ts",
            level = "level",
            logger = "logger",
            msg = "msg",
            req_id = "request_id",
        }
    } // parse JSON fields from app logs

    stage.labels {
        values = {
            source = "app", 
            service = "notes-api",
            compose_project = "fastapi-notes",
        }
    }

    forward_to = [loki.write.default.receiver]
}

// Where to send logs (we'll add on the Loki Service next)
loki.write "default" {
    endpoint {
        url = "http://loki:3100/loki/app/v1/push"
    }
}